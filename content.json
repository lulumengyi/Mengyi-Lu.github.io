{"meta":{"title":"lmy的NLP学习记录","subtitle":null,"description":null,"author":"lmy","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"313-319周计划","slug":"313-319周计划","date":"2018-03-13T02:45:31.419Z","updated":"2018-03-13T11:42:51.582Z","comments":true,"path":"2018/03/13/313-319周计划/","link":"","permalink":"http://yoursite.com/2018/03/13/313-319周计划/","excerpt":"","text":"这周计划 计划 继续实验 收集论文并阅读几篇 看懂tensorflow中sequence to sequence代码（tf.contrib.seq2seq）seq2seq样例代码详解 强化学习视频接着看并记录笔记发到博客 https://morvanzhou.github.io/tutorials/machine-learning/reinforcement-learning/ 论文(待补充） (2018 AAAI)| Reinforcement Learning for Relation Classification from Noisy Data Classifying Relations by Ranking with Convolutional Neural Networks （2016-acl）| Relation Classification via Multi-Level Attention CNNs","categories":[],"tags":[]},{"title":"","slug":"论文研读","date":"2018-03-12T13:38:26.073Z","updated":"2018-03-12T13:38:26.073Z","comments":true,"path":"2018/03/12/论文研读/","link":"","permalink":"http://yoursite.com/2018/03/12/论文研读/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"","slug":"强化学习","date":"2018-03-07T01:50:48.511Z","updated":"2018-03-07T01:50:48.511Z","comments":true,"path":"2018/03/07/强化学习/","link":"","permalink":"http://yoursite.com/2018/03/07/强化学习/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"第五部分 序列模型","slug":"序列模型","date":"2018-02-26T13:41:26.520Z","updated":"2018-02-28T12:41:40.316Z","comments":true,"path":"2018/02/26/序列模型/","link":"","permalink":"http://yoursite.com/2018/02/26/序列模型/","excerpt":"","text":"第一周 循环序列模型（recurrent sequence model） 1.1 为什么选择序列模型 我们先看下有哪些例子使用了序列模型？ 1.语音识别中，给定了一个输入音频片段x，要求输出片段对应的文字记录y。x，y都是序列数据 2.音乐识别。只有输出数据y是序列数据，而输入数据可以是空集，也可以是单一的数字，这个数可以指代你想生成音乐风格或者那首曲子的前几个曲符。无论怎样，x可以是空集或是单一的数字，然后输出序列y。 3.情感分类。输入数据x是序列，there is nothing to like in this movie。输出这句评论对应几星。 4.DNA序列分析。 5.机器翻译。 6.视频动作识别。 7.命名实体识别。 1.2 数字符号 NotationMotivating example输入语句：x:Harry Potter and Herminoe Granger invented a new spell x[^1] x[^2]命名实体识别，假如你想每个单词都对应1个输出，判断是否为人名从哪里开始到哪里结束。y:I I O I I O O O O y[^1]Tx（）怎么表示像Harry这样的单词做一个词表，vocabulary【a,aron,…harry,..potter】one hot表示法，【0，0，0…..1,0,0,0,0…】 pos=4075 10000维 unknown 不在词表中的词 1.3 循环神经网络模型如何建立一个模型，实现x到y的映射。建立一个标准的网络模型，有两个问题，1.有不同的长度x和y，2.不共享从文本不同位置上学到的特征（单词和单词之间的特性无法被捕捉到），比如神经网络在1的位置上发现harry是人名的一部分，在其他位置发现harry时你也希望也能识别出是人名出来。在卷积网络中我们是这样学习的，参数会十分大，单词数量乘以10000维的维度，假设我们有10000个常用词，为其构建一个10000*1 的矩阵(column matrix)，假如第一个词是苹果(apple), 那么对应的第一个位置为1，其他都为0，所以称之为one-hot。这样每个单词都有对应的矩阵进行表示，如果这个词没有出现在我们的字典中，那么我们可以给一个特殊的符号代替，常用的是 [UNK] (unknown) 为什么是循环神经网络？我们取第一个单词，通过隐层，然后直接输出y，循环神经网络做的是什么呢，当我们输入第二个单词时，同样通过隐层输出y，它不仅仅是利用了第二个单词的信息，它还利用了时间步1的信息，在下一个时间步，在第三个单词输出y，直到最后一个，在每一个时间步，激活值a，为了表示循环人们画一个圈。每个时间步共享参数，共享参数，一个缺点是它只用了前面序列的信息来预测，双向循环神经网络解决，同时使用前面和后面的信息。这些参数是如何起作用的？ 前向传播为了算出a(1)=g(w_aaa(0)+w_axx(1)+b_a)y(1)=g(w_yaa(1)+b_y) tanh 更常用a(t)=g(w_aaa(t)+w_axx(t)+b_a)y(t)=g(w_yaa(t)+b_y)简化 a(t)=g(w_a[a(t-1),x(t)]+b_a)w_a=[w_aa|w_ax] w_aa(100,100) w_ax(100,10000) w_a=(100,10100)[a(t-1),x(t)]=[a(t-1) 100 x(t) 10000] 10100 1.4通过时间的反向传播损失函数 1.5不同类型的循环神经网络并不是所有情况tx=ty，examples 文本情感分类，我们在读入所有单词后再输出y，many to one 音乐生成，one to many机器翻译 many to many 长度不同 1.6语言模型与序列生成什么是语言模型呢？语音识别系统 the apple and pair salad the apple and pear saladp(the apple and pair salad)=3.2*10_7输入一个文本序列，语言模型会估计某个单词出现的概率。如何来用RNN来建语言模型呢？首先需要一个训练集，语料库。有一个句子，先把它标记化，EOS结束标记。如果不在字典中，unk标记。RNN ModelCats average 15 hours of sleep a day.预测每个词的概率是多少 y是一个10000+2维（字典大小+unk+结束标记）现在有一个新的序列 y1,y2,y3.第一个softmax层告诉你p(y1)第二个softmax,p(y2|y1),第三p(y3|y1,y2) 1.7对新序列采样当你训了好一个模型，你想知道这个模型学到了什么，一个非正式的方法是进行一次新序列采样。一个序列模型，模拟了任意特定单词序列的概率，对概率进行采样，来生成一个新的单词序列。比如说现在有一个训练好的模型，为了进行采样，第一步要做的事就是，对你想要模型生成的第一个词进行采样，输入x1,输出y1，y1中是每个单词的概率是多少，用np.random.choice进行采样，把刚刚进行采样的词当作下一时间步的输入x2，(x2=y1),得到y2，同样依次进行。怎么判断这个句子结束，EOS标记。如果得到unknown标记，重新进行采样，直到得到一个不是未知标识的词，你也可以不管。也可以建立基于字符的模型，[a,b,c,….z;A,…Z]使用基于字符的，不会产生unk标志，一会得到很长的序列，不够捕捉较长的信息。 1.8带有神经网络的梯度消失vanishing gradients with RNNsthe cat which already ate …,was full.the cats which already ate …,were full.不塌擅长捕捉长信息。比如我们有一个根深的网络，反向传播时很难影响到前面的权重，很难冉一个神经网络记住前面的额信息，应该是用was 还是were，基本的RNN模型有很多限制，很难调整序列前面的计算。长期依赖问题。梯度爆炸，在反向传播时，指数级大的会让参数变得很大，NaN数值溢出，用梯度修剪，如果它大于某一个值，缩小 通过最大值来修剪。梯度消失更难解决。GRU解决 1.9GRU它改变了RNN的隐藏层，使其更好的捕捉深层连接并改善了梯度消失的问题。a(t)=g(w_a[a(t-1),x(t)]+b_a)GRU the cat which already ate …,was full.GRU会有一个新的c=memory cell c(t)=a(t)c_n(t)=tanh(wc[c(t-1),x(t)]+bc)gamma u=g(wu[c(t-1),x(t)]+bu) gate 决定什么更新c(t)c(t)=gamma uc_n(t)+(1-gamma u)c(t-1)因为gate很容易取到0，只要这个值是一个很大的负数，就基本为0，维持细胞的状态，可能是0.0000001，这就不会有梯度消失的问题，因为gamma很接近0，这就是说c(t)基本等于c(t-1),而c(t)的值即使经过很多的时间步还是可以很好的维持下来，这就是缓解梯度消失的关键。一些细节：c(t)可以是向量 gamma 相同的维度，gamma r 用来计算c(t) c(t-1)的相关性 1.10 LSTM比GRU更广泛应用。遗忘门，更新门，输出门， 1.11 双向RNN模型为了了解双向RNN的动机，我们先看下命名实体识别那个例子。He said,”Teddy bears are on sale!”He said,”Teddy Roosevelt was a great President!”Teddy判断是不是人名有个问题，只看前几个单词是无法准确判断的，双向的话可以解决这个问题。 1.12 深度RNN有的时候为了得到更好的结果，需要叠加很多个RNN在一起，这种网络我们称之为深层RNN。比如我们要计算 a[2][3]，则a[2][3]=g(W[2]a[a[2][2],a[1][3]]+ba[3])","categories":[],"tags":[]},{"title":"Markdown 常用语法(个人总结）","slug":"Markdown常用语法","date":"2018-01-22T02:34:28.985Z","updated":"2018-03-02T01:41:34.988Z","comments":true,"path":"2018/01/22/Markdown常用语法/","link":"","permalink":"http://yoursite.com/2018/01/22/Markdown常用语法/","excerpt":"","text":"Markdown 常用语法(个人总结） 1.标题 markdown标题支持两种形式。 ###1.1用#标记 在标题开头加上1-6个#，依次代表一级标题，二级标题…六级标题 #一级标题 ##二级标题 ###三级标题 ####四级标题 #####五级标题 ######六级标题 效果如图所示: #一级标题 ##二级标题 ###三级标题 ####四级标题 #####五级标题 ######六级标题 ###1.2用=和-标记 在标题底下加上任意个=代表一级标题，-代表二级标题。 一级标题 二级标题##2.强调 加粗文本或者加粗文本 斜体文本 或者斜体文本 删除文本 效果如下 加粗文本或者加粗文本斜体文本 或者斜体文本删除文本 ##3.引用 在段落的第一行最前面加”&gt;” “这世间不缺完美的人，缺少的是从心里往外的真心、正义、无畏、同情。” 区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; 区块内也可以套用其他的 Markdown 语法，包括加粗、列表、代码区块等 看到和听到的，经常令你们沮丧，世俗是这样强大，强大到生不出改变它们的念头。 可是如果有机会提前了解了你们的人生，知道青春也不过只有这些日子，不知你们是否还会在意的， 那些世俗让你们在意的事情，比如占有多少，才更荣耀，拥有什么，才能被爱。等你们长大，你们因绿芽冒出土地而喜悦，会对出生的朝阳欢呼雀跃，也会给别人善意和温暖， 但是却会在赞美别的生命的同时，常常，甚至永远忘了自己的珍贵。 愿你在被打击的时，记起你的珍贵，抵抗恶意； 愿你在迷茫时，坚信你的珍贵，爱你所爱，行你所行，听从你心，无问西东。 ##4.列表 无序列表使用星号、加号或是减号作为列表标记，效果一样： 1.无序列表 *今天 +明天 -后天 有序列表则使用数字接着一个英文句点 日常安排 1.7点半起床 2.8点30半来实验室 3.11点半吃饭 4.14点前午休 ##5.区段元素 1.链接 [我的博客名字]（http://lulumengyi.github.io） 我的博客地址：Lmy’s Blog ###2.空格Markdown语法会忽略首行开头的空格，如果要体现出首行开头空两个的效果，可以使用 全角符号下的空格 ，windows下使用 shift+空格 切换。 ###3.行内标记行内标记用反引号把它包起来’ ‘，例如： 行内标记 这是一个&apos;美好的&apos;周末 这是一个’美好的’周末 (为啥不变？？？) ###4.插入图片 ###5.待办事宜 Todo 列表使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表例如： /-[早起跑步] (为啥不变？？）","categories":[],"tags":[]},{"title":"Lmy的一篇博客","slug":"Lmy的第一篇博客","date":"2018-01-21T14:10:13.138Z","updated":"2018-01-21T14:14:06.955Z","comments":true,"path":"2018/01/21/Lmy的第一篇博客/","link":"","permalink":"http://yoursite.com/2018/01/21/Lmy的第一篇博客/","excerpt":"","text":"在这里记录我的学习之旅我有一头小毛驴，从来也不骑","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-01-21T13:32:29.820Z","updated":"2018-01-21T13:32:29.820Z","comments":true,"path":"2018/01/21/hello-world/","link":"","permalink":"http://yoursite.com/2018/01/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}